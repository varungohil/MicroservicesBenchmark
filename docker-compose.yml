version: "3.9"
#version: "3.3"
services:
  proxy:
    image: envoyproxy/envoy-alpine:v1.14.1
    environment:
      NODE_ENV: development
      loglevel: debug
    ports:
      - 8081:8081
      - 9900:9900
    networks:
      - envoymesh
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
    restart: always
      
  frontend:
    build: ./frontend
    ports:
      - "5000:5000"
    networks:
      - envoymesh
    restart: always

  register:
    container_name: register
    build: ./register
    ports:
      - "5001:5001"
    networks:
      - envoymesh
    restart: always
    depends_on:
      mongodb-register:
        condition: service_started
      jaeger-agent:
        condition: service_started

  classlist:
    container_name: classlist
    build: ./classlist
    ports:
      - "5002:5002"
    networks:
      - envoymesh
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      mongodb-classlist:
        condition: service_started
      jaeger-agent:
        condition: service_started

  cart:
    container_name: cart
    build: ./cart
    ports:
      - "5003:5003"
    networks:
      - envoymesh
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      mongodb-cart:
        condition: service_started
      jaeger-agent:
        condition: service_started

  prof:
    container_name: prof
    build: ./prof
    ports:
      - "5004:5004"
    networks:
      - envoymesh
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      mongodb-prof:
        condition: service_started
      jaeger-agent:
        condition: service_started
  
  mongodb-register:
    container_name: register_db
    image: mongo
    ports:
      - "27017:27017"
    restart: always
    networks:
      - envoymesh
    volumes:
      - ./data/register/:/data/db
  mongodb-classlist:
    container_name: classlist_db
    image: mongo
    ports:
      - "27018:27017"
    restart: always
    networks:
      - envoymesh
    volumes:
      - ./data/classlist:/data/db
  mongodb-cart:
    container_name: cart_db
    image: mongo
    ports:
      - "27019:27017"
    restart: always
    networks:
      - envoymesh
    volumes:
      - ./data/cart:/data/db
  mongodb-prof:
    container_name: prof_db
    image: mongo
    ports:
      - "27020:27017"
    restart: always
    networks:
      - envoymesh
    volumes:
      - ./data/prof:/data/db

  jaeger-agent:
    image: jaegertracing/all-in-one:latest
    # container_name: 'class_enrollment_jaeger'
    command: " --collector.zipkin.host-port=:9411"
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14250:14250
      - 14268:14268
      - 9411:9411
    restart: always
    networks:
      - envoymesh

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - 4317:4317       # OTLP gRPC receiver
      - 4318:4318       # OTLP gRPC receiver
      - 55681:55681
    depends_on:
      jaeger-agent:
        condition: service_started
    restart: always
    networks:
      - envoymesh

networks:
  envoymesh: {}
      