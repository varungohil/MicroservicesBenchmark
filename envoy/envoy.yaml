admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9900, protocol: TCP }
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 8081 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/register.register/" }
                route:
                  cluster: register_service
                  #timeout: 0s
                  #max_stream_duration:
                  #  grpc_timeout_header_max: 0s
                  max_grpc_timeout: 2s
              - match: { prefix: "/classlist.classlist/" }
                route:
                  cluster: classlist_service
                  #timeout: 0s
                  #max_stream_duration:
                  #  grpc_timeout_header_max: 0s
                  max_grpc_timeout: 2s
              - match: { prefix: "/cart.cart/" }
                route:
                  cluster: cart_service
                  #timeout: 0s
                  #max_stream_duration:
                  #  grpc_timeout_header_max: 0s
                  max_grpc_timeout: 2s
              - match: { prefix: "/prof.prof/" }
                route:
                  cluster: prof_service
                  #timeout: 0s
                  #max_stream_duration:
                  #  grpc_timeout_header_max: 0s
                  max_grpc_timeout: 2s
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,traceid,spanid,traceflags 
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message,grpc-status-details-bin,grpc-status-details-text
          http_filters:
          - name: envoy.filters.http.grpc_web
          - name: envoy.filters.http.cors
          - name: envoy.filters.http.router
            typed_config: {}
  clusters:
  - name: register_service
    connect_timeout: 1s
    #type: STRICT_DNS
    type: LOGICAL_DNS
    http2_protocol_options: {}
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: register_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                ipv4_compat: true
                address: register
                port_value: 5001
  - name: classlist_service
    connect_timeout: 1s
    #type: STRICT_DNS
    type: LOGICAL_DNS
    http2_protocol_options: {}
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: classlist_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                ipv4_compat: true
                address: classlist
                port_value: 5002
  - name: cart_service
    connect_timeout: 1s
    #type: STRICT_DNS
    type: LOGICAL_DNS
    http2_protocol_options: {}
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: cart_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                ipv4_compat: true
                address: cart
                port_value: 5003
  - name: prof_service
    connect_timeout: 1s
    #type: STRICT_DNS
    type: LOGICAL_DNS
    http2_protocol_options: {}
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: prof_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                ipv4_compat: true
                address: prof
                port_value: 5004